'''
Each new term in the Fibonacci sequence is generated by adding the 
previous two terms. By starting with 1 and 2, the first 10 terms 
will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values 
do not exceed four million, find the sum of the even-valued terms.
'''

# i got confused with this problem and thought it was to calculate
# the fibs up to the 4,000,000th fib number which is huge
def fib_up_to(n):
	fibs = [0, 1]
	for i in range(2, 100):
		if fibs[-1] > n:			
			break
		fibs.append(fibs[-1] + fibs[-2])
	return fibs

def sum_even_fibs_up_to(n):
	fibs = fib_up_to(n)	
	return sum(fib for fib in fibs if fib % 2==0)
	

if __name__ == '__main__':
	print sum_even_fibs_up_to(4000000)
